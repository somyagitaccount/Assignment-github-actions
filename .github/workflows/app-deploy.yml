name: Java App Build & Deploy (ECR + Helm)

on:
  push:
    branches: ["main"]
    paths:
      - 'Application/**'
      - 'helm-chart/**'
      - '.github/workflows/app-deploy.yml'
  workflow_dispatch:

env:
  JAR_NAME: greet-app-0.0.1-SNAPSHOT.jar
  ARTIFACT_NAME: greet-app-artifact
  IMAGE_TAG: "1.0.0"

jobs:
  build_and_package:
    name: Build and Package JAR
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17 with Maven cache
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean package --batch-mode --no-transfer-progress
        working-directory: Application

      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: Application/target/${{ env.JAR_NAME }}

  docker_build_and_push:
    name: Docker Build & Push to ECR
    runs-on: ubuntu-latest
    needs: build_and_package
    environment: prod
    steps:
      - uses: actions/checkout@v3

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: Application/target

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & Push Docker image
        run: |
          IMAGE=${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker build -t $IMAGE -f Application/Dockerfile Application
          docker push $IMAGE

  helm_deploy:
    name: Helm Deploy to EKS
    runs-on: ubuntu-latest
    needs: docker_build_and_push
    environment: prod
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Set up kubeconfig for EKS
        run: aws eks update-kubeconfig --name ${{ vars.EKS_CLUSTER_NAME }} --region ${{ vars.AWS_REGION }}

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Lint Helm chart
        run: helm lint ./helm-chart --strict

      - name: Deploy with Helm
        run: |
          helm upgrade --install greet ./helm-chart \
            --namespace default \
            --set image.repository=${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY }} \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --set image.pullPolicy=Always